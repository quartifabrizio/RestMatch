<!-- dashboard.hbs -->
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard RestMatch</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
   <style>
        /* Base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
        }
        
        /* Navbar styles */
        .navbar {
            background-color: #222831;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .navbar-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.8rem 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .logo {
            color: #fff;
            font-size: 1.5rem;
            font-weight: 700;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .logo i {
            color: #ff5722;
        }
        
        .nav-links {
            display: flex;
            list-style: none;
            gap: 1.5rem;
        }
        
        .nav-links li a {
            color: #ddd;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }
        
        .nav-links li a:hover, .nav-links li a.active {
            color: #ff5722;
        }
        
        .logout-btn {
            background-color: transparent;
            color: #ddd;
            border: 1px solid #ff5722;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }
        
        .logout-btn:hover {
            background-color: #ff5722;
            color: #fff;
        }
        
        .mobile-toggle {
            display: none;
            background: none;
            border: none;
            color: #fff;
            font-size: 1.5rem;
            cursor: pointer;
        }
        
        /* Online users counter */
        .online-users {
            background-color: #1e8e3e;
            color: white;
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.3rem;
            margin-left: 1rem;
        }
        
        .online-users i {
            color: #6effbe;
        }
        
        /* Dashboard container */
        .dashboard-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }
        
        h1 {
            font-size: 2rem;
            color: #333;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        h1 i {
            color: #ff5722;
        }
        
        .welcome-message {
            color: #666;
            margin-bottom: 2rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        /* Alert styles */
        .alert {
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 2rem;
            display: none;
        }
        
        .success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        /* Layout styles */
        .split-layout {
            display: flex;
            gap: 2rem;
        }
        
        .left, .right {
            flex: 1;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
        }
        
        h2 {
            font-size: 1.5rem;
            color: #333;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        h2 i {
            color: #ff5722;
        }
        
        /* Form styles */
        .form-group {
            position: relative;
            margin-bottom: 1.5rem;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }
        
        .form-group i {
            position: absolute;
            left: 1rem;
            top: 2.3rem;
            color: #aaa;
        }
        
        .form-group input, .form-group select {
            width: 100%;
            padding: 0.8rem 1rem 0.8rem 2.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }
        
        .form-group input:focus, .form-group select:focus {
            outline: none;
            border-color: #ff5722;
        }
        
        .btn-primary {
            background-color: #ff5722;
            color: #fff;
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: 4px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .btn-primary:hover {
            background-color: #e64a19;
        }
        
        /* Job list styles - Modified for vertical scrolling */
        .job-list-container {
            height: 600px;
            overflow-y: auto;
            overflow-x: hidden;
            padding-right: 10px;
            margin-right: -10px;
            scrollbar-width: thin;
            scrollbar-color: #ff5722 #f5f5f5;
        }

        .job-list-container::-webkit-scrollbar {
            width: 8px;
        }

        .job-list-container::-webkit-scrollbar-track {
            background: #f5f5f5;
            border-radius: 10px;
        }

        .job-list-container::-webkit-scrollbar-thumb {
            background-color: #ff5722;
            border-radius: 10px;
            border: 2px solid #f5f5f5;
        }
        
        .job-list {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }
        
        .job-card {
            display: flex;
            gap: 1rem;
            border: 1px solid #eee;
            border-radius: 8px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background-color: #fff;
        }
        
        .job-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .job-image {
            width: 150px;
            height: 150px;
            overflow: hidden;
        }
        
        .job-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        
        .job-card:hover .job-image img {
            transform: scale(1.05);
        }
        
        .job-info {
            padding: 1rem;
            flex: 1;
        }
        
        .job-title {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
        }
        
        .job-role, .job-description, .job-period {
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .job-role i, .job-description i, .job-period i {
            color: #ff5722;
        }
        
        .btn {
            background-color: #ff5722;
            color: #fff;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            text-decoration: none;
            font-size: 0.9rem;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
            transition: background-color 0.3s;
        }
        
        .btn:hover {
            background-color: #e64a19;
        }
        
        .no-jobs {
            color: #666;
            font-style: italic;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        /* Responsive styles */
        @media (max-width: 900px) {
            .split-layout {
                flex-direction: column;
            }
            
            .navbar-container {
                padding: 0.8rem 1rem;
            }
        }
        
        @media (max-width: 768px) {
            .mobile-toggle {
                display: block;
            }
            
            .nav-links {
                display: none;
                position: absolute;
                top: 100%;
                left: 0;
                right: 0;
                background-color: #222831;
                flex-direction: column;
                padding: 1rem;
            }
            
            .nav-links.active {
                display: flex;
            }
            
            .logout-btn {
                display: none;
            }
            
            .nav-links li:last-child {
                margin-top: 0.5rem;
                padding-top: 0.5rem;
                border-top: 1px solid #444;
            }
            
            .nav-links li:last-child a {
                color: #ff5722;
            }
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar">
        <div class="navbar-container">
            <a href="/dashboard" class="logo">
                <i class="fas fa-utensils"></i> RestMatch
            </a>
            <button class="mobile-toggle">
                <i class="fas fa-bars"></i>
            </button>
            <ul class="nav-links">
                <li><a href="/dashboard" class="active"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                <li><a href="/chat"><i class="fas fa-comments"></i> Chat</a></li>
                <li><a href="/ajax"><i class="fas fa-filter"></i> Ricerca</a></li>
                <li><a href="/profile"><i class="fas fa-user"></i> Profilo</a></li>
                <li><div class="online-users"><i class="fas fa-circle"></i> <span id="online-counter">1</span> online</div></li>
            </ul>
            <a href="/logout" class="logout-btn"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </div>
    </nav>

    <div class="dashboard-container">
        {{#if (equals user.ruolo "ristorante")}}
            <h1><i class="fas fa-utensils"></i> Dashboard Ristoratore</h1>
        {{else}}
            <h1><i class="fas fa-utensils"></i> Dashboard Lavoratore</h1>
        {{/if}}
        <p class="welcome-message"><i class="fas fa-user-circle"></i> Benvenuto, {{user.email}}!</p>
        
        <div id="alert" class="alert"></div>

        <div class="split-layout">
            <section class="left">
                <h2><i class="fas fa-cog"></i> Salva le tue preferenze</h2>
                <form id="preferencesForm" action="/save-preferences" method="POST">
                    <div class="form-group">
                        <label for="region">Regione</label>
                        <i class="fas fa-map-marker-alt"></i>
                        <input type="text" id="region" name="region" placeholder="Inserisci una regione" required value="{{preferences.region}}">
                    </div>

                    <div class="form-group">
                        <label for="city">Città</label>
                        <i class="fas fa-city"></i>
                        <input type="text" id="city" name="city" placeholder="Inserisci una città" required value="{{preferences.city}}">
                    </div>

                    <div class="form-group">
                        <label for="startDate">Data Inizio</label>
                        <i class="fas fa-calendar-alt"></i>
                        <input type="date" id="startDate" name="startDate" required value="{{preferences.startDate}}">
                    </div>

                    <div class="form-group">
                        <label for="endDate">Data Fine</label>
                        <i class="fas fa-calendar-check"></i>
                        <input type="date" id="endDate" name="endDate" required value="{{preferences.endDate}}">
                    </div>

                    <div class="form-group">
                        <label for="jobType">Lavoro Richiesto</label>
                        <i class="fas fa-briefcase"></i>
                        <select id="jobType" name="jobType" required>
                            <option value="" disabled {{#unless preferences.jobType}}selected{{/unless}}>Seleziona un tipo di lavoro</option>
                            <option value="Chef" {{#if (equals preferences.jobType "Chef")}}selected{{/if}}>Chef</option>
                            <option value="Cameriere" {{#if (equals preferences.jobType "Cameriere")}}selected{{/if}}>Cameriere</option>
                            <option value="Barista" {{#if (equals preferences.jobType "Barista")}}selected{{/if}}>Barista</option>
                            <option value="Lavapiatti" {{#if (equals preferences.jobType "Lavapiatti")}}selected{{/if}}>Lavapiatti</option>
                            <option value="Responsabile Sala" {{#if (equals preferences.jobType "Responsabile Sala")}}selected{{/if}}>Responsabile Sala</option>
                            <option value="Aiuto Cuoco" {{#if (equals preferences.jobType "Aiuto Cuoco")}}selected{{/if}}>Aiuto Cuoco</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="restaurantType">Tipologia di Ristorante</label>
                        <i class="fas fa-store"></i>
                        <select id="restaurantType" name="restaurantType" required>
                            <option value="" disabled {{#unless preferences.restaurantType}}selected{{/unless}}>Seleziona una tipologia</option>
                            <option value="Trattoria" {{#if (equals preferences.restaurantType "Trattoria")}}selected{{/if}}>Trattoria</option>
                            <option value="Ristorante Cinese" {{#if (equals preferences.restaurantType "Ristorante Cinese")}}selected{{/if}}>Ristorante Cinese</option>
                            <option value="Ristorante Italiano" {{#if (equals preferences.restaurantType "Ristorante Italiano")}}selected{{/if}}>Ristorante Italiano</option>
                            <option value="Sushi" {{#if (equals preferences.restaurantType "Sushi")}}selected{{/if}}>Sushi</option>
                            <option value="Fast Food" {{#if (equals preferences.restaurantType "Fast Food")}}selected{{/if}}>Fast Food</option>
                            <option value="Pizzeria" {{#if (equals preferences.restaurantType "Pizzeria")}}selected{{/if}}>Pizzeria</option>
                        </select>
                    </div>

                    <button type="submit" class="btn-primary"><i class="fas fa-save"></i> Salva Preferenze</button>
                </form>

                {{#if (equals user.ruolo "ristorante")}}
                <div class="create-offer-toggle">
                    <h2><i class="fas fa-plus-circle"></i> Crea un'offerta di lavoro</h2>
                    <button id="toggleOfferForm" class="btn-primary"><i class="fas fa-plus"></i> Nuova Offerta</button>
                </div>
                
                <form id="createOfferForm" action="/create-offer" method="POST">
                    <div class="form-group">
                        <label for="title">Titolo Offerta</label>
                        <i class="fas fa-heading"></i>
                        <input type="text" id="title" name="title" placeholder="Inserisci un titolo per l'offerta" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="role">Ruolo</label>
                        <i class="fas fa-user-tag"></i>
                        <select id="role" name="role" required>
                            <option value="" disabled selected>Seleziona un ruolo</option>
                            <option value="Chef">Chef</option>
                            <option value="Cameriere">Cameriere</option>
                            <option value="Barista">Barista</option>
                            <option value="Lavapiatti">Lavapiatti</option>
                            <option value="Responsabile Sala">Responsabile Sala</option>
                            <option value="Aiuto Cuoco">Aiuto Cuoco</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="description">Descrizione</label>
                        <i class="fas fa-align-left"></i>
                        <input type="text" id="description" name="description" placeholder="Descrivi l'offerta di lavoro" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="city">Città</label>
                        <i class="fas fa-city"></i>
                        <input type="text" id="city" name="city" placeholder="Inserisci la città" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="region">Regione</label>
                        <i class="fas fa-map-marker-alt"></i>
                        <input type="text" id="region" name="region" placeholder="Inserisci la regione" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="restaurant_type">Tipologia Ristorante</label>
                        <i class="fas fa-store"></i>
                        <select id="restaurant_type" name="restaurant_type" required>
                            <option value="" disabled selected>Seleziona una tipologia</option>
                            <option value="Trattoria">Trattoria</option>
                            <option value="Ristorante Cinese">Ristorante Cinese</option>
                            <option value="Ristorante Italiano">Ristorante Italiano</option>
                            <option value="Sushi">Sushi</option>
                            <option value="Fast Food">Fast Food</option>
                            <option value="Pizzeria">Pizzeria</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="job_type">Tipo di Lavoro</label>
                        <i class="fas fa-briefcase"></i>
                        <select id="job_type" name="job_type" required>
                            <option value="" disabled selected>Seleziona un tipo</option>
                            <option value="Chef">Chef</option>
                            <option value="Cameriere">Cameriere</option>
                            <option value="Barista">Barista</option>
                            <option value="Lavapiatti">Lavapiatti</option>
                            <option value="Responsabile Sala">Responsabile Sala</option>
                            <option value="Aiuto Cuoco">Aiuto Cuoco</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="start_date">Data Inizio</label>
                        <i class="fas fa-calendar-alt"></i>
                        <input type="date" id="start_date" name="start_date" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="end_date">Data Fine</label>
                        <i class="fas fa-calendar-check"></i>
                        <input type="date" id="end_date" name="end_date" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="salary">Stipendio (opzionale)</label>
                        <i class="fas fa-euro-sign"></i>
                        <input type="text" id="salary" name="salary" placeholder="Es: 1500€/mese">
                    </div>
                    
                    <button type="submit" class="btn-primary"><i class="fas fa-paper-plane"></i> Crea Offerta</button>
                </form>
                {{/if}}
            </section>

            <section class="right">
                <h2><i class="fas fa-briefcase"></i> Offerte di Lavoro{{#if preferences.jobType}} per {{preferences.jobType}}{{/if}}</h2>
                
                <!-- Vertically scrollable job list -->
                <div class="job-list-container">
                    <div class="job-list">
                        {{#if jobs.length}}
                            {{#each jobs}}
                            <div class="job-card">
                                <div class="job-image">
                                    <img src="{{imageUrl}}" alt="{{title}}">
                                </div>
                                <div class="job-info">
                                    <h3 class="job-title">{{title}}</h3>
                                    <p class="job-role"><i class="fas fa-user-tag"></i> {{role}}</p>
                                    <p class="job-description"><i class="fas fa-align-left"></i> {{description}}</p>
                                    <p class="job-period"><i class="fas fa-calendar-alt"></i> Dal {{start_date}} al {{end_date}}</p>
                                    <p class="job-role"><i class="fas fa-map-marker-alt"></i> {{city}}, {{region}}</p>
                                    <p class="job-role"><i class="fas fa-store"></i> {{restaurant_type}}</p>
                                    {{#if salary}}
                                    <p class="job-role"><i class="fas fa-euro-sign"></i> {{salary}}</p>
                                    {{/if}}
                                    <button class="btn contact-restaurateur" data-offer-id="{{id}}"><i class="fas fa-paper-plane"></i> Contatta Ristoratore</button>
                                </div>
                            </div>
                            {{/each}}
                        {{else}}
                            <p class="no-jobs"><i class="fas fa-exclamation-circle"></i> Nessuna offerta di lavoro disponibile.</p>
                        {{/if}}
                    </div>
                </div>
            </section>
        </div>
    </div>

    <script>
        // Toggle mobile menu
        document.querySelector('.mobile-toggle').addEventListener('click', function() {
            document.querySelector('.nav-links').classList.toggle('active');
        });

        // Handle preferences form submission
        document.getElementById('preferencesForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = {};
            formData.forEach((value, key) => {
                data[key] = value;
            });
            
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<div class="spinner"></div> Salvataggio...';
            submitBtn.disabled = true;
            
            fetch('/save-preferences', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                submitBtn.innerHTML = originalBtnText;
                submitBtn.disabled = false;
                
                const alertEl = document.getElementById('alert');
                alertEl.textContent = data.message;
                alertEl.className = 'alert ' + (data.success ? 'success' : 'error');
                alertEl.style.display = 'block';
                
                // If successful and offers received, update job listings
                if(data.success && data.offers) {
                    updateJobListings(data.offers);
                }
                
                // Hide alert after 3 seconds
                setTimeout(() => {
                    alertEl.style.display = 'none';
                }, 3000);
            })
            .catch(error => {
                submitBtn.innerHTML = originalBtnText;
                submitBtn.disabled = false;
                
                const alertEl = document.getElementById('alert');
                alertEl.textContent = 'Errore durante il salvataggio: ' + error.message;
                alertEl.className = 'alert error';
                alertEl.style.display = 'block';
            });
        });
        
        // Function to update job listings
        function updateJobListings(offers) {
            const jobList = document.querySelector('.job-list');
            
            if(offers.length === 0) {
                jobList.innerHTML = '<p class="no-jobs"><i class="fas fa-exclamation-circle"></i> Nessuna offerta di lavoro disponibile.</p>';
                return;
            }
            
            jobList.innerHTML = '';
            
            offers.forEach(job => {
                const jobCard = document.createElement('div');
                jobCard.className = 'job-card';
                
                jobCard.innerHTML = `
                    <div class="job-image">
                        <img src="${job.imageUrl}" alt="${job.title}">
                    </div>
                    <div class="job-info">
                        <h3 class="job-title">${job.title}</h3>
                        <p class="job-role"><i class="fas fa-user-tag"></i> ${job.role}</p>
                        <p class="job-description"><i class="fas fa-align-left"></i> ${job.description}</p>
                        <p class="job-period"><i class="fas fa-calendar-alt"></i> Dal ${job.start_date} al ${job.end_date}</p>
                        <p class="job-role"><i class="fas fa-map-marker-alt"></i> ${job.city}, ${job.region}</p>
                        <p class="job-role"><i class="fas fa-store"></i> ${job.restaurant_type}</p>
                        ${job.salary ? `<p class="job-role"><i class="fas fa-euro-sign"></i> ${job.salary}</p>` : ''}
                        <button class="btn contact-restaurateur" data-offer-id="${job.id}"><i class="fas fa-paper-plane"></i> Contatta Ristoratore</button>
                    </div>
                `;
                
                jobList.appendChild(jobCard);
            });
            
            // Add event listeners for the new contact buttons
            document.querySelectorAll('.contact-restaurateur').forEach(button => {
                button.addEventListener('click', function() {
                    const offerId = this.getAttribute('data-offer-id');
                    contactRestaurateur(offerId);
                });
            });
        }
        
        // Toggle offer creation form
        if (document.getElementById('toggleOfferForm')) {
            document.getElementById('toggleOfferForm').addEventListener('click', function(e) {
                e.preventDefault();
                const form = document.getElementById('createOfferForm');
                form.style.display = form.style.display === 'none' || form.style.display === '' ? 'block' : 'none';
                this.innerHTML = form.style.display === 'none' ? '<i class="fas fa-plus"></i> Nuova Offerta' : '<i class="fas fa-minus"></i> Nascondi Form';
            });
        }
        
        // Handle offer creation form submission
        if (document.getElementById('createOfferForm')) {
            document.getElementById('createOfferForm').addEventListener('submit', function(e) {
                e.preventDefault();
                
                const formData = new FormData(this);
                const data = {};
                formData.forEach((value, key) => {
                    data[key] = value;
                });
                
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalBtnText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<div class="spinner"></div> Creazione...';
                submitBtn.disabled = true;
                
                fetch('/create-offer', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                    submitBtn.innerHTML = originalBtnText;
                    submitBtn.disabled = false;
                    
                    const alertEl = document.getElementById('alert');
                    alertEl.textContent = data.message;
                    alertEl.className = 'alert ' + (data.success ? 'success' : 'error');
                    alertEl.style.display = 'block';
                    
                    if(data.success) {
                        document.getElementById('createOfferForm').reset();
                        // Refresh the page to show the new offer
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    }
                    
                    // Hide alert after 3 seconds
                    setTimeout(() => {
                        alertEl.style.display = 'none';
                    }, 3000);
                })
                .catch(error => {
                    submitBtn.innerHTML = originalBtnText;
                    submitBtn.disabled = false;
                    
                    const alertEl = document.getElementById('alert');
                    alertEl.textContent = 'Errore durante la creazione: ' + error.message;
                    alertEl.className = 'alert error';
                    alertEl.style.display = 'block';
                });
            });
        }

        // Function to contact restaurateur
        function contactRestaurateur(offerId) {
            fetch('/api/contact-restaurateur', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ offerId: offerId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = `/chat/${data.roomId}`;
                } else {
                    alert('Errore durante il contatto del ristoratore: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Errore:', error);
                alert('Si è verificato un errore durante il contatto del ristoratore');
            });
        }

        // Handle contact restaurateur button click
        document.querySelectorAll('.contact-restaurateur').forEach(button => {
            button.addEventListener('click', function() {
                const offerId = this.getAttribute('data-offer-id');
                contactRestaurateur(offerId);
            });
        });
    </script>
</body>
</html>