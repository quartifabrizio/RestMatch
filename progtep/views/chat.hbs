<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat - Piattaforma di Lavoro</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<style>
    /* Main Colors and Variables */
/* Main Colors and Variables */
:root {
  --primary-color: #ff5722;
  --primary-dark: #e64a19;
  --text-color: #333333;
  --bg-color: #f5f7fa;
  --secondary-bg: #ffffff;
  --border-color: #eee;
  --success-color: #1e8e3e;
  --danger-color: #f44336;
}

/* Reset and Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}

/* Navbar styles */
.navbar {
  background-color: #222831;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 0;
  z-index: 100;
}

.navbar-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.8rem 2rem;
  max-width: 1200px;
  margin: 0 auto;
}

.logo {
  color: #fff;
  font-size: 1.5rem;
  font-weight: 700;
  text-decoration: none;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.logo i {
  color: var(--primary-color);
}

.nav-links {
  display: flex;
  list-style: none;
  gap: 1.5rem;
}

.nav-links li a {
  color: #ddd;
  text-decoration: none;
  font-weight: 500;
  transition: color 0.3s;
  display: flex;
  align-items: center;
  gap: 0.4rem;
}

.nav-links li a:hover, .nav-links li a.active {
  color: var(--primary-color);
}

.logout-btn {
  background-color: transparent;
  color: #ddd;
  border: 1px solid var(--primary-color);
  padding: 0.5rem 1rem;
  border-radius: 4px;
  text-decoration: none;
  font-weight: 500;
  transition: all 0.3s;
  display: flex;
  align-items: center;
  gap: 0.4rem;
}

.logout-btn:hover {
  background-color: var(--primary-color);
  color: #fff;
}

.mobile-toggle {
  display: none;
  background: none;
  border: none;
  color: #fff;
  font-size: 1.5rem;
  cursor: pointer;
}

/* Online users counter */
.online-users {
  background-color: var(--success-color);
  color: white;
  padding: 0.4rem 0.8rem;
  border-radius: 20px;
  font-size: 0.8rem;
  display: flex;
  align-items: center;
  gap: 0.3rem;
  margin-left: 1rem;
}

.online-users i {
  color: #6effbe;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  line-height: 1.6;
}

.container {
  max-width: 1200px;
  margin: 2rem auto;
  padding: 0 1rem;
}

.row {
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
}

.col-md-3 {
  flex: 0 0 calc(25% - 1rem);
  max-width: calc(25% - 1rem);
}

.col-md-9 {
  flex: 0 0 calc(75% - 1rem);
  max-width: calc(75% - 1rem);
}

/* Typography */
h3, h4 {
  font-size: 1.5rem;
  color: #333;
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

h3 i, h4 i {
  color: var(--primary-color);
}

/* Forms */
.form-group {
  position: relative;
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-group i {
  position: absolute;
  left: 1rem;
  top: 2.3rem;
  color: #aaa;
}

.form-control {
  width: 100%;
  padding: 0.8rem 1rem 0.8rem 2.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
  transition: border-color 0.3s;
}

.form-control:focus {
  outline: none;
  border-color: var(--primary-color);
}

.btn {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.8rem 1.5rem;
  border-radius: 4px;
  border: none;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.3s;
  text-decoration: none;
}

.btn-primary {
  background-color: var(--primary-color);
  color: white;
}

.btn-primary:hover {
  background-color: var(--primary-dark);
}

.btn-secondary {
  background-color: #555;
  color: white;
}

.btn-secondary:hover {
  background-color: #444;
}

/* Lists */
#rooms-list, #participants-list {
  list-style-type: none;
  margin-bottom: 2rem;
  background-color: var(--secondary-bg);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

#rooms-list li, #participants-list li {
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--border-color);
  position: relative;
  transition: background-color 0.3s;
}

#rooms-list li:hover, #participants-list li:hover {
  background-color: #f8f8f8;
}

#rooms-list li:last-child, #participants-list li:last-child {
  border-bottom: none;
}

#rooms-list a {
  display: block;
  color: var(--text-color);
  text-decoration: none;
  transition: color 0.3s;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

#rooms-list a:hover {
  color: var(--primary-color);
}

.badge {
  background-color: var(--primary-color);
  color: white;
  border-radius: 50%;
  padding: 2px 6px;
  font-size: 0.8rem;
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
  font-weight: bold;
}

/* Status Indicators */
.status-badge {
  padding: 0.3rem 0.6rem;
  border-radius: 20px;
  font-size: 0.8rem;
  margin-left: 0.5rem;
  display: inline-flex;
  align-items: center;
  gap: 0.3rem;
}

.online {
  background-color: var(--success-color);
  color: white;
}

.offline {
  background-color: #ccc;
  color: #666;
}

/* Chat Container */
#chat-container {
  background-color: var(--secondary-bg);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 10px rgba(0,0,0,0.05);
  height: calc(100vh - 150px);
  display: flex;
  flex-direction: column;
}

#chat-container h3 {
  padding: 1rem 1.5rem;
  background-color: #222831;
  color: white;
  margin-bottom: 0;
  border-bottom: 2px solid var(--primary-color);
}

/* Messages */
#messages-container {
  flex: 1;
  overflow-y: auto;
  padding: 1.5rem;
  background-color: var(--bg-color);
}

.message {
  margin-bottom: 1.5rem;
  max-width: 75%;
  clear: both;
  border-radius: 8px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.message-self {
  float: right;
  background-color: var(--primary-color);
  color: white;
  border-radius: 15px 15px 0 15px;
}

.message-other {
  float: left;
  background-color: #fff;
  border-radius: 15px 15px 15px 0;
  border: 1px solid #eee;
}

.message-header {
  padding: 0.8rem 1.5rem 0;
  font-size: 0.8rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.message-header i {
  color: rgba(255,255,255,0.8);
}

.message-self .message-header {
  color: rgba(255,255,255,0.8);
}

.message-other .message-header {
  color: #777;
}

.message-other .message-header i {
  color: var(--primary-color);
}

.message-content {
  padding: 0.5rem 1.5rem 1rem;
  word-wrap: break-word;
}

#typing-indicator {
  padding: 0.5rem 1.5rem;
  color: #777;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

#typing-indicator i {
  color: var(--primary-color);
}

/* Message Form */
#message-form {
  background-color: #f8f8f8;
  padding: 1rem 1.5rem;
  border-top: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  gap: 1rem;
}

#message-input {
  flex: 1;
  resize: none;
  padding: 0.8rem 1rem 0.8rem 2.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
  max-height: 100px;
  position: relative;
}

#message-input:focus {
  outline: none;
  border-color: var(--primary-color);
}

.message-input-icon {
  position: absolute;
  left: 1.5rem;
  top: 50%;
  transform: translateY(-50%);
  color: #aaa;
}

/* Checkboxes styling */
.checkbox {
  display: block;
  margin-bottom: 0.8rem;
}

.checkbox label {
  display: flex;
  align-items: center;
  cursor: pointer;
  font-weight: normal;
  gap: 0.5rem;
}

.checkbox input[type="checkbox"] {
  margin-right: 0.5rem;
  accent-color: var(--primary-color);
  width: 1rem;
  height: 1rem;
}

/* Footer */
footer {
  text-align: center;
  padding: 2rem 0;
  margin-top: 2rem;
  color: #777;
  font-size: 0.9rem;
  border-top: 1px solid var(--border-color);
}

/* Icon styles for FontAwesome */
h3[id="chat-rooms"]::before {
  content: "\f086";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  color: var(--primary-color);
}

h4::before {
  content: "\f067";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  color: var(--primary-color);
}

#rooms-list li a::before {
  content: "\f086";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  color: var(--primary-color);
}

#participants-list li::before {
  content: "\f007";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  color: #666;
}

.btn-primary::before {
  content: "\f1d8";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
}

.form-group label[for="room-name"]::before {
  content: "\f1d8";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  margin-right: 0.5rem;
  color: var(--primary-color);
}

.form-group label[for="room-type"]::before {
  content: "\f0b0";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  margin-right: 0.5rem;
  color: var(--primary-color);
}

.form-group label:contains("Partecipanti")::before {
  content: "\f500";
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  margin-right: 0.5rem;
  color: var(--primary-color);
}

/* Responsive styles */
@media (max-width: 900px) {
  .row {
    flex-direction: column;
  }
  
  .col-md-3, .col-md-9 {
    flex: 0 0 100%;
    max-width: 100%;
  }
  
  .navbar-container {
    padding: 0.8rem 1rem;
  }
  
  #chat-container {
    height: calc(100vh - 300px);
  }
}

@media (max-width: 768px) {
  .mobile-toggle {
    display: block;
  }
  
  .nav-links {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background-color: #222831;
    flex-direction: column;
    padding: 1rem;
  }
  
  .nav-links.active {
    display: flex;
  }
  
  .logout-btn {
    display: none;
  }
  
  .nav-links li:last-child {
    margin-top: 0.5rem;
    padding-top: 0.5rem;
    border-top: 1px solid #444;
  }
  
  .message {
    max-width: 85%;
  }
}
</style>
<body>
  <nav class="navbar">
        <div class="navbar-container">
            <a href="/chat" class="logo">
                <i class="fas fa-utensils"></i> RestMatch
            </a>
            <button class="mobile-toggle">
                <i class="fas fa-bars"></i>
            </button>
            <ul class="nav-links">
                <li><a href="/chat" class="active"><i class="fas fa-tachometer-alt"></i> Chat</a></li>
                <li><a href="/Dashboard"><i class="fas fa-comments"></i> Dashboard</a></li>
                <li><a href="/ajax"><i class="fas fa-filter"></i> Ricerca</a></li>
                <li><a href="/profile"><i class="fas fa-user"></i> Profilo</a></li>
                <li><div class="online-users"><i class="fas fa-circle"></i> <span id="online-counter">1</span> online</div></li>
            </ul>
            <a href="/logout" class="logout-btn"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </div>
    </nav>
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <h3>Chat Rooms</h3>
                <ul id="rooms-list">
                    {{#each rooms}}
                    <li>
                        <a href="/chat/{{id}}">
                            {{name}} ({{participant_count}}) 
                            {{#if unread_count}}
                            <span class="badge">{{unread_count}}</span>
                            {{/if}}
                        </a>
                    </li>
                    {{/each}}
                </ul>
                
                <h4>Crea nuova chat</h4>
                <form id="create-room-form">
                    <div class="form-group">
                        <label for="room-name">Nome Chat</label>
                        <input type="text" id="room-name" class="form-control" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="room-type">Tipo</label>
                        <select id="room-type" class="form-control">
                            <option value="private">Privata</option>
                            <option value="group">Gruppo</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label>Partecipanti</label>
                        <div id="participants-container">
                            {{#each users}}
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox" name="participants" value="{{id}}"> {{email}}
                                </label>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">Crea Chat</button>
                </form>
            </div>
            
            <div class="col-md-9">
                <div id="chat-container">
                    <h3>Seleziona una chat per iniziare</h3>
                    <p>Online users: <span id="online-users-count">0</span></p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Connessione WebSocket
            const socket = io();
            
            // Aggiornamento contatore utenti online
            socket.on('update online users', function(count) {
                document.getElementById('online-users-count').textContent = count;
            });
            
            // Autenticazione socket con l'ID utente dalla sessione
            socket.emit('authenticate', {
                userId: {{user.id}}
            });
            
            // Form per la creazione di una nuova chat room
            const createRoomForm = document.getElementById('create-room-form');
            if (createRoomForm) {
                createRoomForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const roomName = document.getElementById('room-name').value;
                    const roomType = document.getElementById('room-type').value;
                    
                    // Raccolta dei partecipanti selezionati
                    const participantCheckboxes = document.querySelectorAll('input[name="participants"]:checked');
                    const participants = Array.from(participantCheckboxes).map(checkbox => checkbox.value);
                    
                    // Invio della richiesta AJAX
                    fetch('/api/rooms', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            name: roomName,
                            type: roomType,
                            participants: participants
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Redirect alla nuova chat room
                            window.location.href = `/chat/${data.roomId}`;
                        } else {
                            alert('Errore durante la creazione della chat: ' + data.error);
                        }
                    })
                    .catch(error => {
                        console.error('Errore:', error);
                        alert('Si è verificato un errore durante la creazione della chat');
                    });
                });
            }
            
            // Gestione stato utenti online/offline
            socket.on('user status', function(data) {
                const userElements = document.querySelectorAll(`[data-user-id="${data.userId}"]`);
                userElements.forEach(el => {
                    const statusBadge = el.querySelector('.status-badge');
                    if (statusBadge) {
                        if (data.status === 'online') {
                            statusBadge.textContent = 'Online';
                            statusBadge.classList.add('online');
                            statusBadge.classList.remove('offline');
                        } else {
                            statusBadge.textContent = 'Offline';
                            statusBadge.classList.add('offline');
                            statusBadge.classList.remove('online');
                        }
                    }
                });
            });
        });
    </script>

    <footer>
        <p>&copy; {{year}} Piattaforma di Lavoro. Tutti i diritti riservati.</p>
    </footer>
</body>
</html>