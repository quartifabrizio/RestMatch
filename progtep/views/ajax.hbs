<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ricerca Preferenze | RestMatch</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<style>
        /* Base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        
        /* Navbar styles */
        .navbar {
            background-color: #222831;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .navbar-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.8rem 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .logo {
            color: #fff;
            font-size: 1.5rem;
            font-weight: 700;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .logo i {
            color: #ff5722;
        }
        
        .nav-links {
            display: flex;
            list-style: none;
            gap: 1.5rem;
        }
        
        .nav-links li a {
            color: #ddd;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }
        
        .nav-links li a:hover, .nav-links li a.active {
            color: #ff5722;
        }
        
        .logout-btn {
            background-color: transparent;
            color: #ddd;
            border: 1px solid #ff5722;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }
        
        .logout-btn:hover {
            background-color: #ff5722;
            color: #fff;
        }
        
        .mobile-toggle {
            display: none;
            background: none;
            border: none;
            color: #fff;
            font-size: 1.5rem;
            cursor: pointer;
        }
        
        /* Online users counter */
        .online-users {
            background-color: #1e8e3e;
            color: white;
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.3rem;
            margin-left: 1rem;
        }
        
        .online-users i {
            color: #6effbe;
        }
        
        /* Main content */
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
            flex: 1;
        }
        
        h1 {
            font-size: 2rem;
            color: #333;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-align: center;
        }
        
        h1 i {
            color: #ff5722;
        }
        
        h2 {
            font-size: 1.5rem;
            color: #333;
            margin-bottom: 1rem;
            margin-top: 2rem;
            border-bottom: 2px solid #ff5722;
            padding-bottom: 0.5rem;
            display: inline-block;
        }
        
        .description {
            color: #666;
            margin-bottom: 2rem;
            text-align: center;
            max-width: 800px;
            margin-left: auto;
            margin-right: auto;
        }
        
        /* Card styles */
        .card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            padding: 2rem;
            margin-bottom: 2rem;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }
        
        /* Button styles */
        .btn-container {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }
        
        .btn {
            background-color: #ff5722;
            color: #fff;
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: 4px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .btn:hover {
            background-color: #e64a19;
            transform: translateY(-2px);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        /* Results area */
        #results {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            padding: 2rem;
            min-height: 300px;
            margin-top: 2rem;
        }
        
        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            color: #666;
            font-style: italic;
        }
        
        .loading::before {
            content: "";
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #ff5722;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            display: inline-block;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .error {
            color: #d32f2f;
            background-color: #ffebee;
            padding: 1rem;
            border-radius: 4px;
            margin-top: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        /* Preference item styles */
        .preference-item {
            background-color: #f9f9f9;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border-left: 4px solid #ff5722;
            transition: transform 0.2s ease;
        }
        
        .preference-item:hover {
            transform: translateX(5px);
        }
        
        .preference-item p {
            margin-bottom: 0.5rem;
        }
        
        .preference-item p:last-child {
            margin-bottom: 0;
        }
        
        .preference-item strong {
            color: #555;
            display: inline-block;
            width: 160px;
        }
        
        /* Footer styles */
        footer {
            background-color: #222831;
            color: #ddd;
            text-align: center;
            padding: 1.5rem;
            margin-top: 3rem;
        }
        
        /* Responsive styles */
        @media (max-width: 768px) {
            .mobile-toggle {
                display: block;
            }
            
            .nav-links {
                display: none;
                position: absolute;
                top: 100%;
                left: 0;
                right: 0;
                background-color: #222831;
                flex-direction: column;
                padding: 1rem;
            }
            
            .nav-links.active {
                display: flex;
            }
            
            .logout-btn {
                display: none;
            }
            
            .btn-container {
                flex-direction: column;
                align-items: stretch;
            }
            
            .btn {
                justify-content: center;
            }
            
            .preference-item strong {
                width: 120px;
            }
        }
    </style>
<body>
    <div class="container">
        <h1><i class="fas fa-filter"></i> Gestione Preferenze con AJAX</h1>
        <p class="description">
            Questa pagina consente di cercare e visualizzare le preferenze di lavoro utilizzando tecnologie AJAX.
            Le richieste vengono effettuate in background senza ricaricare la pagina per un'esperienza utente pi√π fluida.
        </p>
        
        <div class="card">
            <h2><i class="fas fa-search"></i> Vedi Preferenze</h2>
            <p>Seleziona una delle opzioni qui sotto per visualizzare le preferenze di lavoro:</p>
            
            <div class="btn-container">
                <button id="btnGetAllPreferences" class="btn">
                    <i class="fas fa-list-ul"></i> Mostra Tutte le Preferenze
                </button>
                <button id="btnGetBergamoPreferences" class="btn">
                    <i class="fas fa-map-marker-alt"></i> Filtra per Bergamo
                </button>
            </div>
            
            <div id="results">
                <p><i class="fas fa-info-circle"></i> I risultati della ricerca appariranno qui. Seleziona una delle opzioni sopra per iniziare.</p>
            </div>
        </div>
    </div>

    <footer>
        <p>&copy; {{year}} RestMatch - Gestione Preferenze</p>
    </footer>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Riferimenti agli elementi DOM
            const btnGetAllPreferences = document.getElementById('btnGetAllPreferences');
            const btnGetBergamoPreferences = document.getElementById('btnGetBergamoPreferences');
            const resultsDiv = document.getElementById('results');
            
            // Funzione per effettuare richieste AJAX
            function makeAjaxRequest(url, method, callback) {
                // Mostra stato di caricamento
                resultsDiv.innerHTML = '<p class="loading">Caricamento in corso...</p>';
                
                // Crea l'oggetto XMLHttpRequest
                const xhr = new XMLHttpRequest();
                
                // Configura la richiesta
                xhr.open(method, url, true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                
                // Gestione della risposta
                xhr.onload = function() {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        // Chiamata al callback con i dati ricevuti
                        callback(null, JSON.parse(xhr.responseText));
                    } else {
                        // Chiamata al callback con l'errore
                        callback('Errore nella richiesta: ' + xhr.statusText, null);
                    }
                };
                
                // Gestione degli errori di rete
                xhr.onerror = function() {
                    callback('Errore di connessione di rete', null);
                };
                
                // Invia la richiesta
                xhr.send();
            }
            
            // Funzione per visualizzare le preferenze
            function displayPreferences(preferences) {
                if (preferences.length === 0) {
                    resultsDiv.innerHTML = '<p><i class="fas fa-exclamation-circle"></i> Nessuna preferenza trovata.</p>';
                    return;
                }
                
                let html = '<h2><i class="fas fa-list"></i> Elenco Preferenze</h2>';
                html += `<p>Trovate ${preferences.length} preferenze:</p>`;
                
                preferences.forEach(pref => {
                    html += `
                        <div class="preference-item">
                            <p><strong>Utente ID:</strong> ${pref.user_id}</p>
                            <p><strong>Regione:</strong> ${pref.country}</p>
                            <p><strong>Citt√†:</strong> ${pref.city || 'Non specificata'}</p>
                            <p><strong>Data Inizio:</strong> ${formatDate(pref.start_date)}</p>
                            <p><strong>Data Fine:</strong> ${formatDate(pref.end_date)}</p>
                            <p><strong>Tipo Lavoro:</strong> ${pref.job_type}</p>
                            <p><strong>Tipo Ristorante:</strong> ${pref.restaurant_type}</p>
                        </div>
                    `;
                });
                
                resultsDiv.innerHTML = html;
            }
            
            // Funzione per formattare le date
            function formatDate(dateString) {
                if (!dateString) return 'Data non specificata';
                
                const date = new Date(dateString);
                if (isNaN(date.getTime())) return dateString;
                
                return date.toLocaleDateString('it-IT', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
            }
            
            // Gestione del click per tutte le preferenze
            btnGetAllPreferences.addEventListener('click', function() {
                btnGetAllPreferences.disabled = true;
                btnGetBergamoPreferences.disabled = true;
                
                makeAjaxRequest('/api/preferences', 'GET', function(err, data) {
                    btnGetAllPreferences.disabled = false;
                    btnGetBergamoPreferences.disabled = false;
                    
                    if (err) {
                        resultsDiv.innerHTML = `<p class="error"><i class="fas fa-exclamation-triangle"></i> ${err}</p>`;
                        return;
                    }
                    displayPreferences(data);
                });
            });
            
            // Gestione del click per preferenze filtrate per Bergamo
            btnGetBergamoPreferences.addEventListener('click', function() {
                btnGetAllPreferences.disabled = true;
                btnGetBergamoPreferences.disabled = true;
                
                makeAjaxRequest('/api/preferences/filter?city=Bergamo', 'GET', function(err, data) {
                    btnGetAllPreferences.disabled = false;
                    btnGetBergamoPreferences.disabled = false;
                    
                    if (err) {
                        resultsDiv.innerHTML = `<p class="error"><i class="fas fa-exclamation-triangle"></i> ${err}</p>`;
                        return;
                    }
                    displayPreferences(data);
                });
            });
        });
    </script>
</body>
</html>